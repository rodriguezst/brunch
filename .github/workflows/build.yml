name: matrix-test
on: [push, pull_request]
jobs:
  list-kernels:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls kernels/ | jq -R -s -c 'split("\n")[:-1]')"
  build-kernel:
    needs: list-kernels
    runs-on: ubuntu-latest
    strategy:
        matrix:
            kernel: ${{ fromJson(needs.list-kernels.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: DEBIAN_FRONTEND=noninteractive sudo apt-get -y install pv cgpt libncurses-dev gawk flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf
      - run: |
          cd kernels/${{ matrix.kernel }}
          make -j$(nproc) O=out chromeos_defconfig
          make -j$(nproc) O=out
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.kernel }}
          path: kernels/${{ matrix.kernel }}/out
  check-build:
    needs: build-kernel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts
      - name: Copy out directories to their kernel dir
        run: |
          cd artifacts
          for kernel in */
          do
            cp -rf $kernel ../kernels/$kernel/out
            ls ../kernels/$kernel/out
          done
      - name: Download ChromeOS Recovery
        run: |
          RECOVERY_FILE=chromeos_14526.89.0_rammus_recovery_stable-channel_mp-v2.bin
          curl -L https://dl.google.com/dl/edgedl/chromeos/recovery/$RECOVERY_FILE.zip -o ./chromeos_recovery.zip
          unzip chromeos_recovery.zip && rm -rf chromeos_recovery.zip
          echo "RECOVERY_FILE=$RECOVERY_FILE" >> $GITHUB_ENV
      - name: Run build.sh script
        run: sudo bash build.sh ${{ env.RECOVERY_FILE }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: brunch-artifact
          path: out/brunch_*.tar.gz
          if-no-files-found: error
